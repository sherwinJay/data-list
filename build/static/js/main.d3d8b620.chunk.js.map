{"version":3,"sources":["components/Home.js","components/customFunction/useForm.js","components/Login.js","components/AdminHeader.js","components/AddForm.js","components/UpdateForm.js","components/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Home","useState","clientList","setClientList","url","window","location","protocol","hostname","useEffect","a","clientApi","axios","get","result","fetchData","console","log","showClients","map","client","className","name","age","to","useForm","callbackAdd","callbackEditSubmit","callbackUserSubmit","id","setClient","editClient","setEditClient","password","user","setUser","handleChange","e","target","value","handleSubmit","preventDefault","handleEditChange","handleGetEdit","handleEditSubmit","handleLoginChange","Login","props","loginAdmin","admin","loginUser","login","isLogin","onSubmit","type","placeholder","onChange","AdminHeader","onClick","showAddForm","icon","size","title","loggedOut","AddForm","closeAddForm","clientName","clientAge","clientId","UpdateForm","handleUpdateSubmit","closeUpdateForm","handleUpdateChange","Admin","newClient","post","then","res","data","closeEditForm","put","catch","err","addForm","setAddForm","editForm","setEditForm","clientDetails","clientData","key","delete","logout","library","add","faUserCircle","faInfoCircle","faTimesCircle","faMinusCircle","faEdit","faTrash","faPlusCircle","App","setLogin","cookies","Cookies","isLog","ref","useRef","current","usePrevious","authenticate2","set","path","expires","SecuredRoute","render","component","pathname","exact","Boolean","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d3d8b620.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport clientData from './data/clients.json';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const [clientList, setClientList] = useState([]);\r\n\r\n    const url =  `${window.location.protocol}//${window.location.hostname}`;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const clientApi = `${url}/clients/data`,\r\n                result = await axios.get(clientApi);\r\n            setClientList(result);\r\n        }\r\n\r\n        fetchData();\r\n     },[]);\r\n     \r\n     console.log(clientList);\r\n     console.log(url);\r\n    const showClients = clientList.map((client) => {\r\n        return (\r\n            <div className=\"client-box\">\r\n                <p>{client.name}</p>\r\n                <p>{client.age}</p>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"main-header\">\r\n                <div className=\"main-wrapper header-container\">\r\n                    <p>Client Status</p>\r\n                    <Link to=\"/login\" className=\"login-btn\">Login</Link>\r\n                </div>\r\n            </div>      \r\n            <div className=\"main-wrapper\">\r\n                <div className=\"client-container\">\r\n                    { showClients }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Home;","import { useState } from 'react';\r\n\r\nconst useForm = (callbackAdd, callbackEditSubmit, callbackUserSubmit) => {\r\n    const [client, setClient] = useState({ name: '', age: '', id: '' });\r\n    const [editClient, setEditClient] = useState({ name: \"\", age: \"\", id: \"\" });\r\n    const [user, setUser] = useState({ name: \"\", password: \"\" });\r\n\r\n    // HANDLE ADD CLIENT\r\n    const handleChange = (e) => {\r\n        // console.log(e.target.value);\r\n        const { name, value } = e.target;\r\n\r\n        setClient({\r\n            ...client,\r\n            [name]: value\r\n        })\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        callbackAdd();\r\n    };\r\n\r\n\r\n    // HANDLE EDIT CLIENT\r\n    const handleEditChange = (e) => {\r\n        // console.log(e.target.value);\r\n        const { name, value } = e.target;\r\n\r\n        setEditClient({\r\n            ...editClient,\r\n            [name]: value\r\n        })\r\n    }   \r\n\r\n    const handleGetEdit = (client) => {\r\n        setEditClient({\r\n            name: client.name,\r\n            age: client.age,\r\n            id: client.id\r\n        })\r\n    }\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n        callbackEditSubmit();\r\n    }\r\n\r\n    // handle login\r\n    const handleLoginChange = (e) => {\r\n        // console.log(e.target.value);\r\n        const { name, value } = e.target;\r\n\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n\r\n        console.log(user.name)\r\n        console.log(user.password)\r\n    } \r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        client,\r\n        handleEditChange,\r\n        handleGetEdit,\r\n        handleEditSubmit,\r\n        editClient,\r\n        handleLoginChange,\r\n        user\r\n    }\r\n};\r\n\r\nexport default useForm;","import React, { useEffect, useState } from 'react';\r\n// import useForm from 'react-hook-form';\r\nimport useForm from './customFunction/useForm';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport { faOm } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Login = (props) => {\r\n    const {user, handleLoginChange, handleSubmit} = useForm(submit)\r\n    // create state here\r\n    // create form and compare state values to default values\r\n\r\n    // console.log(user.name)\r\n    // console.log(user.password)\r\n\r\n    function submit () {\r\n        loginAdmin()\r\n    }\r\n\r\n    const admin = {\r\n        name: \"admin\",\r\n        password: \"123456\",\r\n    }\r\n\r\n    const loginAdmin = () => {\r\n        // props.login();\r\n        const loginUser = {\r\n            name: user.name,\r\n            password: user.password\r\n        }\r\n\r\n        if(loginUser.name === admin.name && loginUser.password === admin.password) {\r\n            console.log(\"WELCOME admin\")\r\n            props.login();\r\n        }\r\n    }    \r\n\r\n    if(props.isLogin === \"true\"){\r\n        console.log(\"you're login\")\r\n        return(\r\n            <Redirect to=\"/admin\" />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-login-container\">\r\n            <h1>Admin Login</h1>\r\n            <div className=\"form-container\">\r\n                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"name\" name=\"name\" value={user.name} onChange={handleLoginChange} />\r\n                    <input type=\"password\" placeholder=\"password\" name=\"password\" value={user.password} onChange={handleLoginChange} />\r\n                    <button type=\"submit\">login</button>\r\n                </form>\r\n                <Link to=\"/\" className=\"login-home-btn\">Go to Home Page</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst AdminHeader = (props) => {\r\n\r\n    return (\r\n        <div className=\"main-header\">\r\n            <div className=\"main-wrapper header-container\">\r\n                <p>Client Status</p>\r\n                <div className=\"header-btn-wrapper\">\r\n                    <div onClick={props.showAddForm}>\r\n                    <FontAwesomeIcon \r\n                        icon=\"plus-circle\" \r\n                        size=\"2x\"\r\n                        className=\"add-btn\"\r\n                    />\r\n                    <p>\r\n                        Add Client\r\n                    </p>\r\n                    </div>\r\n                    <div>\r\n                    <FontAwesomeIcon \r\n                        icon=\"info-circle\" \r\n                        size=\"2x\"\r\n                    />\r\n                    <p>\r\n                        Help\r\n                    </p>\r\n                    </div>\r\n                    <div className=\"logout-btn\" \r\n                        title=\"logout\" \r\n                        onClick={props.loggedOut}\r\n                    >\r\n                        <FontAwesomeIcon \r\n                            icon=\"user-circle\" \r\n                            size=\"2x\"\r\n                        />\r\n                        <p>\r\n                            Logout\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminHeader","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst AddForm = (props) => {\r\n    return (\r\n        <form className=\"client-form\" \r\n            onSubmit={props.handleSubmit}>\r\n            <FontAwesomeIcon \r\n                className=\"close-btn\"\r\n                icon=\"times-circle\" \r\n                size=\"lg\"\r\n                title=\"close form\"\r\n                onClick={props.closeAddForm}\r\n            />\r\n            <h2>Add Clients</h2> \r\n            <input name=\"name\" type=\"text\" placeholder=\"name\" value={props.clientName} onChange={props.handleChange}/>\r\n            <input name=\"age\" type=\"text\" placeholder=\"age\" value={props.clientAge} onChange={props.handleChange}/>\r\n            <input name=\"id\" type=\"text\" placeholder=\"id\" value={props.clientId} onChange={props.handleChange}/>\r\n            <input type=\"submit\" placeholder=\"submit\"/>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default AddForm\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst UpdateForm = (props) => {\r\n    return (\r\n        <form className=\"client-form\" \r\n        onSubmit={props.handleUpdateSubmit}>\r\n        <FontAwesomeIcon \r\n            className=\"close-btn\"\r\n            icon=\"times-circle\" \r\n            size=\"lg\"\r\n            title=\"close form\"\r\n            onClick={props.closeUpdateForm}\r\n        />\r\n        <h2>Update Form</h2>\r\n        <input name=\"name\" type=\"text\" placeholder=\"name\" value={props.clientName} onChange={props.handleUpdateChange}/>\r\n        <input name=\"age\" type=\"text\" placeholder=\"age\" value={props.clientAge} onChange={props.handleUpdateChange}/>\r\n        <input type=\"submit\" placeholder=\"submit\"/>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default UpdateForm\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport useForm from './customFunction/useForm';\r\nimport clientData from './data/clients.json';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport AdminHeader from './AdminHeader';\r\nimport AddForm from './AddForm';\r\nimport UpdateForm from './UpdateForm';\r\n\r\nconst Admin = (props) => {\r\n    // custom hook\r\n    // -- refer on ./customFunction/useForm.js\r\n    const {handleChange, handleSubmit, client, handleEditChange, handleGetEdit, handleEditSubmit, editClient} = useForm(addClients, updateClient);\r\n    // end of custom hook\r\n\r\n    const [addForm, setAddForm] = useState(false);\r\n    const [editForm, setEditForm] = useState(false);\r\n\r\n    const url =  `${window.location.protocol}//${window.location.hostname}`\r\n    console.log(`current url: ${url}`)\r\n\r\n    // buttons\r\n    const loggedOut = () => { props.logout() };\r\n    const showEditForm = () => { setEditForm(true) };\r\n    const closeEditForm = () => { setEditForm(false) };\r\n    const showAddForm = () => { setAddForm(true) };\r\n    const closeAddForm = () => { setAddForm(false) };\r\n    // end of buttons\r\n\r\n    // AXIOS REQUEST\r\n    function addClients () {\r\n        closeAddForm();\r\n        const newClient = {\r\n            name: client.name,\r\n            age: client.age,\r\n            id: client.id\r\n        }\r\n        axios.post(`${url}/clients/data`, newClient)\r\n            .then(res => console.log(res.data));\r\n    }\r\n    function updateClient () {\r\n        closeEditForm();\r\n        axios.put(`${url}/clients/data/${editClient.id}`, editClient)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n    const deleteClient = (clientId) => {\r\n        axios.delete(`${url}/clients/data/${clientId}`)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n    // END OF AXIOS REQUEST\r\n\r\n    // create client content\r\n    const clientDetails = clientData.map((client) => {\r\n        const handleDelete = (e) => {\r\n            e.preventDefault();\r\n            // console.log(`client id: ${client.id}`)\r\n            deleteClient(client.id);\r\n        }\r\n        const getClientEdit = (e) => {\r\n            e.preventDefault();\r\n            showEditForm();\r\n            handleGetEdit(client)\r\n        }\r\n\r\n        return (\r\n            <div className=\"client-box\" key={client.id}>\r\n                <div className=\"client-btn-wrapper\">\r\n                    <FontAwesomeIcon \r\n                        className=\"client-btn\"\r\n                        icon=\"edit\" \r\n                        size=\"xs\"\r\n                        title=\"update client\"\r\n                        onClick={getClientEdit}\r\n                    />\r\n                    <FontAwesomeIcon \r\n                        className=\"client-btn\"\r\n                        icon=\"trash\" \r\n                        size=\"xs\"\r\n                        title=\"delete client\"\r\n                        onClick={handleDelete}\r\n                    />\r\n                </div>\r\n                <p>{client.name}</p>\r\n                <p>{client.age}</p>\r\n            </div>\r\n        )\r\n    });\r\n    // end of create client content\r\n\r\n    return (\r\n\r\n        <div className=\"admin-container\">\r\n            <div className=\"sidebar\">\r\n                 {/* create seperate component - AdminHeader */}\r\n            </div>\r\n            <div className=\"main-container2\">\r\n\r\n                <AdminHeader\r\n                    showAddForm={showAddForm}\r\n                    loggedOut={loggedOut}\r\n                />\r\n               \r\n                {/* end of header */}\r\n\r\n                <h2>Hello Admin</h2>\r\n                <div className=\"main-wrapper\">\r\n                    <div className=\"client-container\">\r\n                        { clientDetails }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* FORMS */}\r\n            <div className={addForm ? \"client-form-container\" : \"hide-form\"}>\r\n                <AddForm\r\n                    handleSubmit={handleSubmit}\r\n                    handleChange={handleChange}\r\n                    closeAddForm={closeAddForm}\r\n                    clientName={client.name}\r\n                    clientAge={client.age}\r\n                    clientId={client.id}\r\n                />\r\n            </div>\r\n            <div className={editForm ? \"client-form-container\" : \"hide-form\"}>\r\n                <UpdateForm\r\n                    handleUpdateSubmit={handleEditSubmit}\r\n                    handleUpdateChange={handleEditChange}\r\n                    closeUpdateForm={closeEditForm}\r\n                    clientName={editClient.name}\r\n                    clientAge={editClient.age}\r\n                />\r\n            </div>\r\n            {/* FORMS END */}\r\n        </div>\r\n    ) \r\n    \r\n}\r\n\r\nexport default Admin","import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect, withRouter, Link, NavLink } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Admin from './components/Admin';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport Cookies from 'universal-cookie';\nimport { faUserCircle, faInfoCircle, faTimesCircle, faMinusCircle, faEdit, faTrash, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faUserCircle, faInfoCircle, faTimesCircle, faMinusCircle, faEdit, faTrash, faPlusCircle );\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n// add conment\nconst App = () => {\n\n  const [login, setLogin] = useState(false);\n\n  const cookies = new Cookies();\n\n  // check updates of login, refer to movie info app\n  const prevLogin = usePrevious(login);\n  const isLog = cookies.get('isLogin'); \n\n  useEffect(() => {\n    console.log(\"welcome\");\n  },[])\n\n  // useEffect(() => {\n  //   // cookies.set('isLogin', login, { path: '/', expires: 0 });\n  //   if(prevLogin !== \"true\"){\n  //     console.log(\"prevLog\")\n  //     setLogin(true);\n  //   } else {\n  //     setLogin(false);\n  //   }\n  // },[isLog])\n  \n  const authenticate2 = () => {\n    cookies.set('isLogin', true, { path: '/', expires: 0 });\n    setLogin(isLog);\n  }\n\n  const logout = () => {\n    cookies.set('isLogin', false, { path: '/', expires: 0 });\n    setLogin(isLog);\n  }\n\n  console.log(isLog)\n\n\n  const SecuredRoute = (props) => {\n    return (\n      <Route path={props.path} render={ data => isLog === \"true\" ? \n        ( <props.component {...data}></props.component> ) :\n        (<Redirect to={{pathname: '/login'}}></Redirect>) }>\n      </Route>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\t\n          <Route \n            exact path=\"/\" \n            component={ Home } \n          />\n          <Route\n            exact path=\"/login\" \n            component={ () => <Login login={authenticate2} isLogin={isLog} /> } \n          />\n          <SecuredRoute \n            exact path=\"/admin\" \n            component={ () =>  <Admin logout={logout} />} \n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}